name: Build and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to AWS ECR
        run:
          name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Assume IAM Role
        id: assume_role
        run: |
          aws sts assume-role --role-arn arn:aws:iam::500535936343:role/Ec2-s3-redis-cognito-lambda-role --role-session-name GitHubActions --output json > temp_credentials.json
          export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' temp_credentials.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' temp_credentials.json)
          export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' temp_credentials.json)

      - name: Login to AWS ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/o8z0z7z0

      - name: Build Docker image
        run: docker build -t my-image .

      - name: Tag Docker image
        run: docker tag my-image:latest public.ecr.aws/my-image:latest

      - name: Push Docker image to ECR
        run: docker push public.ecr.aws/my-image:latest
0

      - name: Build Docker image
        run: docker build -t node .

      - name: Tag Docker image
        run: docker tag node:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/test:latest

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/test:latest
